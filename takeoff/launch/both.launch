<?xml version="1.0"?>
<launch>

  <!-- <param name="robot_description" command="$(find xacro)/xacro.py '$(find summit_xl_description)/robots/summit_xl.urdf.xacro'" />
 -->


  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>

  <!-- Summit_xl_control launch file -->
  <!-- <include file="$(find summit_xl_control)/launch/summit_xl_control.launch" /> -->
  <!-- Launch pad for PS4 -->
  <!-- <include file="$(find summit_xl_pad)/launch/summit_xl_pad_ps4.launch" /> -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find summit_xl_gazebo)/worlds/summit_xl.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
    <gui>
    <camera name="user_camera">
      <pose>0 0 0 0 0 0</pose>
    </camera>
    </gui>
  </include>


  <group ns="summit_xl">
    <param name="tf_prefix" value="summit_xl"/>

    <param name="robot_description" 
           command="$(find xacro)/xacro.py '$(find summit_xl_description)/robots/summit_xl.urdf.xacro'" />

    <!-- Once the joint_state is published, run the robot_state_publisher, 
         the namespace has to be adapted --> 
    <!-- Convert joint states to TF transforms for rviz, etc -->
    <node name="summit_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
      <remap from="/joint_states" to="/summit_xl/joint_states" />
    </node>
           
    <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/> <!-- 0.785398 -->

    <node name="spawn_summit_xl" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-param robot_description
                -urdf 
                -x '$(arg x)'
                -y '$(arg y)'
                -z '$(arg z)'
                -R '$(arg R)'
                -P '$(arg P)'
                -Y '$(arg Y)'
                -model summit_xl " />
  </group>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find summit_xl_control)/config/summit_xl_control.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
  output="screen" ns="/summit_xl" args="--namespace=/summit_xl
                    joint_blw_velocity_controller
                    joint_brw_velocity_controller
                    joint_frw_velocity_controller
                    joint_flw_velocity_controller
                    joint_read_state_controller 
                    "/>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find cvg_sim_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find cvg_sim_gazebo)/urdf/quadrotor_sensors.urdf.xacro"/>
  </include>

  <!-- Groundtruth state publisher -->
  <node name="gt_altitude_ardrone" pkg="takeoff" type="robot_state_broadcaster" />

  <!-- Summit moves -->
  <include file="$(find summit_moves)/launch/summit_moves.launch" />

</launch>
